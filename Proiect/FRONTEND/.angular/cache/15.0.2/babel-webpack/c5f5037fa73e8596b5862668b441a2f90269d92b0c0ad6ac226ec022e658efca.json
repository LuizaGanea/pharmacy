{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class InMemoryDataService {\n  createDb() {\n    const clients = [{\n      id: 12,\n      name: 'Dr. Nice'\n    }, {\n      id: 13,\n      name: 'Bombasto'\n    }, {\n      id: 14,\n      name: 'Celeritas'\n    }, {\n      id: 15,\n      name: 'Magneta'\n    }, {\n      id: 16,\n      name: 'RubberMan'\n    }, {\n      id: 17,\n      name: 'Dynama'\n    }, {\n      id: 18,\n      name: 'Dr. IQ'\n    }, {\n      id: 19,\n      name: 'Magma'\n    }, {\n      id: 20,\n      name: 'Tornado'\n    }];\n    return {\n      clients\n    };\n  }\n  // Overrides the genId method to ensure that a client always has an id.\n  // If the clients array is empty,\n  // the method below returns the initial number (11).\n  // if the clients array is not empty, the method below returns the highest\n  // client id + 1.\n  genId(clients) {\n    return clients.length > 0 ? Math.max(...clients.map(client => client.id)) + 1 : 11;\n  }\n  static #_ = this.ɵfac = function InMemoryDataService_Factory(t) {\n    return new (t || InMemoryDataService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InMemoryDataService,\n    factory: InMemoryDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,mBAAmB;EAC9BC,QAAQ;IACN,MAAMC,OAAO,GAAG,CACd;MAAEC,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAU,CAAE,EAC5B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAU,CAAE,EAC5B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAW,CAAE,EAC7B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAE,EAC3B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAW,CAAE,EAC7B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAQ,CAAE,EAC1B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAQ,CAAE,EAC1B;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAE,EACzB;MAAED,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAE,CAC5B;IACD,OAAO;MAACF;IAAO,CAAC;EAClB;EAEA;EACA;EACA;EACA;EACA;EACAG,KAAK,CAACH,OAAiB;IACrB,OAAOA,OAAO,CAACI,MAAM,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,OAAO,CAACO,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACP,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;EACpF;EAAC;qBAvBUH,mBAAmB;EAAA;EAAA;WAAnBA,mBAAmB;IAAAW,SAAnBX,mBAAmB;IAAAY,YAFlB;EAAM","names":["InMemoryDataService","createDb","clients","id","name","genId","length","Math","max","map","client","factory","providedIn"],"sourceRoot":"","sources":["/home/luiza/Documents/proiectDBnou/Angular/src/app/in-memory-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { Client } from './client';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n  createDb() {\r\n    const clients = [\r\n      { id: 12, name: 'Dr. Nice' },\r\n      { id: 13, name: 'Bombasto' },\r\n      { id: 14, name: 'Celeritas' },\r\n      { id: 15, name: 'Magneta' },\r\n      { id: 16, name: 'RubberMan' },\r\n      { id: 17, name: 'Dynama' },\r\n      { id: 18, name: 'Dr. IQ' },\r\n      { id: 19, name: 'Magma' },\r\n      { id: 20, name: 'Tornado' }\r\n    ];\r\n    return {clients};\r\n  }\r\n\r\n  // Overrides the genId method to ensure that a client always has an id.\r\n  // If the clients array is empty,\r\n  // the method below returns the initial number (11).\r\n  // if the clients array is not empty, the method below returns the highest\r\n  // client id + 1.\r\n  genId(clients: Client[]): number {\r\n    return clients.length > 0 ? Math.max(...clients.map(client => client.id)) + 1 : 11;\r\n  }\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/"]},"metadata":{},"sourceType":"module","externalDependencies":[]}