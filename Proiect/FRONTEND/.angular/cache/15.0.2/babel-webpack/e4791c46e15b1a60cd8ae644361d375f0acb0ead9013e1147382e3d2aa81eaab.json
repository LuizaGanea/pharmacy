{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/medicine.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction MedicineComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 9)(2, \"span\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function MedicineComponent_li_16_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const med_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.delete(med_r3));\n    });\n    i0.ɵɵtext(6, \"x\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const med_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"\", med_r3.id, \"/details\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(med_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", med_r3.name, \" \");\n  }\n}\nexport class MedicineComponent {\n  constructor(medicineService) {\n    this.medicineService = medicineService;\n    this.medicines = [];\n  }\n  ngOnInit() {\n    this.getMedicines();\n  }\n  getMedicines() {\n    this.medicineService.getMedicines().subscribe(medicines => this.medicines = medicines);\n  }\n  add(name, description) {\n    name = name.trim();\n    description = description.trim();\n    if (!name || !description) {\n      return;\n    }\n    this.medicineService.addMedicine({\n      name: name,\n      description: description,\n      requiresPrescription: false,\n      minAge: 18\n    }).subscribe(med => {\n      this.medicines.push(med);\n    });\n  }\n  delete(med) {\n    this.medicines = this.medicines.filter(h => h !== med);\n    this.medicineService.deleteMedicine(med.id).subscribe();\n  }\n  static #_ = this.ɵfac = function MedicineComponent_Factory(t) {\n    return new (t || MedicineComponent)(i0.ɵɵdirectiveInject(i1.MedicineService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MedicineComponent,\n    selectors: [[\"app-medicine\"]],\n    decls: 17,\n    vars: 1,\n    consts: [[\"for\", \"new-name\"], [\"id\", \"new-name\"], [\"name\", \"\"], [\"for\", \"new-description\"], [\"id\", \"new-description\"], [\"description\", \"\"], [\"type\", \"button\", 1, \"add-button\", 3, \"click\"], [1, \"medicine\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [1, \"badge\"], [\"type\", \"button\", \"title\", \"delete medicine\", 1, \"delete\", 3, \"click\"]],\n    template: function MedicineComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Medicine\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 0);\n        i0.ɵɵtext(4, \"Name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 1, 2)(7, \"br\");\n        i0.ɵɵelementStart(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Description: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 4, 5)(12, \"br\");\n        i0.ɵɵelementStart(13, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function MedicineComponent_Template_button_click_13_listener() {\n          i0.ɵɵrestoreView(_r6);\n          const _r0 = i0.ɵɵreference(6);\n          const _r1 = i0.ɵɵreference(11);\n          ctx.add(_r0.value, _r1.value);\n          _r0.value = \"\";\n          return i0.ɵɵresetView(_r1.value = \"\");\n        });\n        i0.ɵɵtext(14, \" Add medicine \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"ul\", 7);\n        i0.ɵɵtemplate(16, MedicineComponent_li_16_Template, 7, 3, \"li\", 8);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.medicines);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterLink],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;IAmBEA,0BAAkC;IAEVA,YAAU;IAAAA,iBAAO;IAACA,YACxC;IAAAA,iBAAI;IACJA,kCACwB;IAAtBA;MAAA;MAAA;MAAA;MAAA,OAASA,oCAAW;IAAA,EAAC;IAACA,iBAAC;IAAAA,iBAAS;;;;IAJ/BA,eAA+B;IAA/BA,kEAA+B;IACZA,eAAU;IAAVA,+BAAU;IAAQA,eACxC;IADwCA,4CACxC;;;ACXJ,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAFnC,cAAS,GAAe,EAAE;EAE8B;EAExDC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACF,eAAe,CAACE,YAAY,EAAE,CAClCC,SAAS,CAACC,SAAS,IAAI,IAAI,CAACA,SAAS,GAAGA,SAAS,CAAC;EACrD;EAEAC,GAAG,CAACC,IAAY,EAAEC,WAAmB;IACnCD,IAAI,GAAGA,IAAI,CAACE,IAAI,EAAE;IAClBD,WAAW,GAAGA,WAAW,CAACC,IAAI,EAAE;IAGhC,IAAI,CAACF,IAAI,IAAI,CAACC,WAAW,EAAE;MAAE;;IAC7B,IAAI,CAACP,eAAe,CAACS,WAAW,CAAC;MAC/BH,IAAI,EAAEA,IAAI;MACVC,WAAW,EAAEA,WAAW;MACxBG,oBAAoB,EAAE,KAAK;MAC3BC,MAAM,EAAE;KACG,CAAC,CACXR,SAAS,CAACS,GAAG,IAAG;MACf,IAAI,CAACR,SAAS,CAACS,IAAI,CAACD,GAAG,CAAC;IAC1B,CAAC,CAAC;EACN;EAEAE,MAAM,CAACF,GAAa;IAClB,IAAI,CAACR,SAAS,GAAG,IAAI,CAACA,SAAS,CAACW,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,GAAG,CAAC;IACtD,IAAI,CAACZ,eAAe,CAACiB,cAAc,CAACL,GAAG,CAACM,EAAE,CAAC,CAACf,SAAS,EAAE;EACzD;EAAC;qBAlCUL,iBAAiB;EAAA;EAAA;UAAjBA,iBAAiB;IAAAqB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;;QDV9B1B,0BAAI;QAAAA,wBAAQ;QAAAA,iBAAK;QAEjBA,2BAAK;QACmBA,sBAAM;QAAAA,iBAAQ;QACpCA,8BAA6B;QAG7BA,gCAA6B;QAAAA,6BAAa;QAAAA,iBAAQ;QAClDA,+BAA2C;QAI3CA,kCAA4H;QAAnFA;UAAAA;UAAA;UAAA;UAAS2B,6BAAkC;UAAAC,YAAa,EAAE;UAAA,OAAE5B,2BAAkB,EAAE;QAAA,EAAE;QACzHA,+BACF;QAAAA,iBAAS;QAGXA,8BAAqB;QACnBA,kEAMK;QACPA,iBAAK;;;QAPiBA,gBAAY;QAAZA,uCAAY","names":["i0","MedicineComponent","constructor","medicineService","ngOnInit","getMedicines","subscribe","medicines","add","name","description","trim","addMedicine","requiresPrescription","minAge","med","push","delete","filter","h","deleteMedicine","id","selectors","decls","vars","consts","template","ctx","_r0"],"sourceRoot":"","sources":["/home/luiza/Documents/proiectDBnou/Angular/src/app/components/medicine/medicine.component.html","/home/luiza/Documents/proiectDBnou/Angular/src/app/components/medicine/medicine.component.ts"],"sourcesContent":["\n<h2>Medicine</h2>\n\n<div>\n  <label for=\"new-name\">Name: </label>\n  <input id=\"new-name\" #name />\n  <br/>\n\n  <label for=\"new-description\">Description: </label>\n  <input id=\"new-description\" #description />\n  <br/>\n \n  <!-- (click) passes input value to add() and then clears the input -->\n  <button type=\"button\" class=\"add-button\" (click)=\"add(name.value, description.value); name.value=''; description.value='';\">\n    Add medicine\n  </button>\n</div>\n\n<ul class=\"medicine\">\n  <li *ngFor=\"let med of medicines\">\n    <a routerLink=\"{{med.id}}/details\">\n      <span class=\"badge\">{{med.id}}</span> {{med.name}}\n    </a>\n    <button type=\"button\" class=\"delete\" title=\"delete medicine\"\n      (click)=\"delete(med)\">x</button>\n  </li>\n</ul>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { MedicineService } from 'src/app/services/medicine.service';\n\nimport { Medicine } from '../../model/medicine';\nimport { ClientService } from '../../services/client.service';\n\n@Component({\n  selector: 'app-medicine',\n  templateUrl: './medicine.component.html',\n  styleUrls: ['./medicine.component.css']\n})\nexport class MedicineComponent implements OnInit {\n  medicines: Medicine[] = [];\n\n  constructor(private medicineService: MedicineService) { }\n\n  ngOnInit(): void {\n    this.getMedicines();\n  }\n\n  getMedicines(): void {\n    this.medicineService.getMedicines()\n    .subscribe(medicines => this.medicines = medicines);\n  }\n\n  add(name: string, description: string): void {\n    name = name.trim();\n    description = description.trim();\n  \n\n    if (!name || !description) { return; }\n    this.medicineService.addMedicine({ \n      name: name,\n      description: description,\n      requiresPrescription: false,\n      minAge: 18 \n    } as Medicine)\n      .subscribe(med => {\n        this.medicines.push(med);\n      });\n  }\n\n  delete(med: Medicine): void {\n    this.medicines = this.medicines.filter(h => h !== med);\n    this.medicineService.deleteMedicine(med.id).subscribe();\n  }\n\n}\n\n\n/*\nCopyright Google LLC. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at https://angular.io/license\n*/"]},"metadata":{},"sourceType":"module","externalDependencies":[]}