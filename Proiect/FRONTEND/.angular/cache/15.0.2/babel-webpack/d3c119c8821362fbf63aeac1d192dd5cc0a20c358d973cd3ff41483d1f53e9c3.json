{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SalesComponent = class SalesComponent {\n  constructor(saleService, medicineService, selectedMedicine = undefined, selectedCLient = undefined) {\n    this.saleService = saleService;\n    this.medicineService = medicineService;\n    this.sales = [];\n  }\n  ngOnInit() {\n    this.getSales();\n  }\n  getSales() {\n    this.saleService.getSales().subscribe(sales => {\n      console.log(sales);\n      this.sales = sales.map(sale => {\n        this.medicineService.getMedicine(sale.id_medicament).subscribe(medicine => sale.medicament = medicine);\n        return sale;\n      });\n      return sales;\n    });\n  }\n  add(dateSale, qquantity, idC, idM) {\n    dateSale = dateSale.trim();\n    let date_sale = new Date(dateSale);\n    qquantity = qquantity.trim();\n    idC = idC.trim();\n    idM = idM.trim();\n    let quantity = Number(qquantity);\n    let id_client = Number(idC);\n    let id_medicament = Number(idM);\n    if (!date_sale || !quantity || !id_client || !id_medicament) {\n      return;\n    }\n    this.saleService.addSale({\n      date_sale,\n      quantity,\n      id_client,\n      id_medicament\n    }).subscribe(sale => {\n      this.getSales();\n    });\n  }\n  delete(sale) {\n    this.sales = this.sales.filter(h => h !== sale);\n    this.saleService.deleteSale(sale.id).subscribe();\n  }\n};\nSalesComponent = __decorate([Component({\n  selector: 'app-sales',\n  templateUrl: './sales.component.html',\n  styleUrls: ['./sales.component.css']\n})], SalesComponent);\nexport { SalesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YACUC,WAAwB,EACxBC,eAAgC,EACxCC,mBAA4BC,SAAS,EACrCC,iBAAwBD,SAAS;IAHzB,gBAAW,GAAXH,WAAW;IACX,oBAAe,GAAfC,eAAe;IAJzB,UAAK,GAAW,EAAE;EAQhB;EAEFI,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACN,WAAW,CAACM,QAAQ,EAAE,CAC1BC,SAAS,CAACC,KAAK,IAAG;MACjBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACG,GAAG,CAACC,IAAI,IAAG;QAC5B,IAAI,CAACX,eAAe,CAACY,WAAW,CAACD,IAAI,CAACE,aAAa,CAAC,CACnDP,SAAS,CAACQ,QAAQ,IAAIH,IAAI,CAACI,UAAU,GAAGD,QAAQ,CAAC;QAElD,OAAOH,IAAI;MACb,CAAC,CAEA;MAED,OAAOJ,KAAK;IACd,CAAC,CAAC;EACJ;EAEAS,GAAG,CAACC,QAAgB,EAAEC,SAAiB,EAAEC,GAAW,EAAEC,GAAW;IAC/DH,QAAQ,GAAGA,QAAQ,CAACI,IAAI,EAAE;IAC1B,IAAIC,SAAS,GAAG,IAAIC,IAAI,CAACN,QAAQ,CAAC;IAClCC,SAAS,GAAGA,SAAS,CAACG,IAAI,EAAE;IAC5BF,GAAG,GAAGA,GAAG,CAACE,IAAI,EAAE;IAChBD,GAAG,GAAGA,GAAG,CAACC,IAAI,EAAE;IAChB,IAAIG,QAAQ,GAACC,MAAM,CAACP,SAAS,CAAC;IAC9B,IAAIQ,SAAS,GAACD,MAAM,CAACN,GAAG,CAAC;IACzB,IAAIN,aAAa,GAACY,MAAM,CAACL,GAAG,CAAC;IAE7B,IAAI,CAACE,SAAS,IAAI,CAACE,QAAQ,IAAI,CAACE,SAAS,IAAI,CAACb,aAAa,EAAE;MAAE;;IAC/D,IAAI,CAACd,WAAW,CAAC4B,OAAO,CAAC;MAAEL,SAAS;MAAEE,QAAQ;MAAEE,SAAS;MAAEb;IAAa,CAAU,CAAC,CAChFP,SAAS,CAACK,IAAI,IAAG;MAChB,IAAI,CAACN,QAAQ,EAAE;IACjB,CAAC,CAAC;EACN;EAEAuB,MAAM,CAACjB,IAAU;IACf,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACA,KAAK,CAACsB,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKnB,IAAI,CAAC;IAC/C,IAAI,CAACZ,WAAW,CAACgC,UAAU,CAACpB,IAAI,CAACqB,EAAE,CAAC,CAAC1B,SAAS,EAAE;EAClD;CAED;AAtDYT,cAAc,eAL1BD,SAAS,CAAC;EACTqC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWtC,cAAc,CAsD1B;SAtDYA,cAAc","names":["Component","SalesComponent","constructor","saleService","medicineService","selectedMedicine","undefined","selectedCLient","ngOnInit","getSales","subscribe","sales","console","log","map","sale","getMedicine","id_medicament","medicine","medicament","add","dateSale","qquantity","idC","idM","trim","date_sale","Date","quantity","Number","id_client","addSale","delete","filter","h","deleteSale","id","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/luiza/Documents/proiectDBnou/Angular/src/app/components/sales/sales.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Sale } from '../../model/sale';\nimport { SaleService } from '../../services/sale.service';\nimport { MedicineService } from 'src/app/services/medicine.service';\n\n@Component({\n  selector: 'app-sales',\n  templateUrl: './sales.component.html',\n  styleUrls: ['./sales.component.css']\n})\nexport class SalesComponent implements OnInit {\n  sales: Sale[] = [];\n\n  constructor(\n    private saleService: SaleService, \n    private medicineService: MedicineService,\n    selectedMedicine?: Medicine=undefined,\n    selectedCLient?: CLient=undefined;\n    ) \n  { }\n\n  ngOnInit(): void {\n    this.getSales();\n  }\n\n  getSales(): void {\n    this.saleService.getSales()\n    .subscribe(sales => {\n      console.log(sales);\n      this.sales = sales.map(sale => {\n        this.medicineService.getMedicine(sale.id_medicament)\n        .subscribe(medicine => sale.medicament = medicine);\n\n        return sale;\n      }\n\n      );\n\n      return sales;\n    });\n  }\n\n  add(dateSale: string, qquantity: string, idC: string, idM: string): void {\n    dateSale = dateSale.trim();\n    let date_sale = new Date(dateSale);\n    qquantity = qquantity.trim();\n    idC = idC.trim();\n    idM = idM.trim();\n    let quantity=Number(qquantity);\n    let id_client=Number(idC);\n    let id_medicament=Number(idM);\n\n    if (!date_sale || !quantity || !id_client || !id_medicament) { return; }\n    this.saleService.addSale({ date_sale, quantity, id_client, id_medicament } as Sale)\n      .subscribe(sale => {\n        this.getSales();\n      });\n  }\n\n  delete(sale: Sale): void {\n    this.sales = this.sales.filter(h => h !== sale);\n    this.saleService.deleteSale(sale.id).subscribe();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}